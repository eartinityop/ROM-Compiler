name: Start build
on:
  pull_request:
    types: [opened]
    branches:
      - main

jobs:
  test:
    name: Clone Manifest, Start Build
    runs-on: self-hosted
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Check-out to repository
        uses: actions/checkout@v4

      - name: Set up variables
        run: |
          export WORKING_DIR="los"
          export ROM_NAME="LineageOS"
          export LOCAL_MANIFEST="https://github.com/eartinityop/local_manifest"
          export LOCAL_MANIFEST_BRANCH="lineage"
          export DEVICE_NAME="r5x"
          export LUNCH_NAME="lineage_r5x"
          export ROM_MANIFEST_LINK="https://github.com/LineageOS/android"
          export ROM_MANIFEST_BRANCH="lineage-20.0"
          export ANDROID_VERSION="13"
          export BUILD_TYPE="userdebug" # or choose from 'eng', 'userdebug', 'user'

          text="Build for $DEVICE_NAME has been started!\nROM Name: $ROM_NAME\nROM Branch: $ROM_MANIFEST_BRANCH\nBUILD Type: $BUILD_TYPE\nANDROID Version: $ANDROID_VERSION\nJob link: https://github.com/AOSP-Builders/ROM-Compiler/actions/runs/${{ github.run_id }}"

      - name: Notify to telegram
        run: |
          curl -s -X POST "https://api.telegram.org/bot5635044382:AAHFzlXfdilMQaM5SvlqN70RjDishZ9XU/sendMessage" \
            -d "chat_id=-1001803186438" \
            -d "text=$text"

      - name: Set-up workspace environment
        run: |
          mkdir $WORKING_DIR
          cd $WORKING_DIR
          neofetch
        continue-on-error: true

      - name: Set-up 'git' credential(s)
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          
      - name: Clone local manifest
        run: |
          rm -rf .repo/local_manifests 
          git clone $LOCAL_MANIFEST -b $LOCAL_MANIFEST_BRANCH .repo/local_manifests

      - name: Start syncing the repository 
        run: |
          while true; do
            repo init -u $ROM_MANIFEST_LINK -b $ROM_MANIFEST_BRANCH &&
            repo sync -c -j$(nproc --all) --no-clone-bundle --no-tags --optimized-fetch --prune --force-sync &&
            break
          done

      - name: Execute if the job is cancelled
        if: ${{ cancelled() }}
        run: pwd && cd && pwd && cd actions-runner && cd work && rm -rf ROM-Compiler

      - name: Start compiling $ROM_NAME
        run: |
          . build/envsetup.sh
          lunch $LUNCH_NAME-$BUILD_TYPE
          mka bacon
        continue-on-error: true
      
      - name: Upload error.log to releases
        if: failure()
        uses: softprops/action-gh-release@v1
        with:
          files: |
            out/error.log
          name: error.log
          tag_name: ${{ github.run_id }}
          body: |
            Target: error.log

      - name: Upload to repository's releases page
        uses: softprops/action-gh-release@v1
        with:
          files: |
            out/target/product/$DEVICE_NAME/recovery.img
            out/target/product/$DEVICE_NAME/boot.img
            out/target/product/$DEVICE_NAME/vendor_boot.img
            out/target/product/$DEVICE_NAME/vendor.img
            out/target/product/$DEVICE_NAME/system.img
            out/target/product/$DEVICE_NAME/*.zip
          name: $LUNCH_NAME-$BUILD_TYPE
          tag_name: ${{ github.run_id }}
          body: |
            Target: $LUNCH_NAME-$BUILD_TYPE
        env:
          TOKEN: ${{ secrets.TOKEN }}
